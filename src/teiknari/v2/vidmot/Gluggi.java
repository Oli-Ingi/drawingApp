/*
    Nemandi:        Ólafur Ingi Guðmundsson                 08.02.2014
    Tölvupóstur:    oig5@hi.is
    
    Forritslýsing:
    Þetta forrit er lítill leikur sem er kallaður Mini-Yahtzee.
    Leikmenn spila einir og henda teningum og reyna að safna stigum
    sem byggjast á því hvað menn fá úr teningakastinu.

    Forritið var unnið í NetBeans og þýtt með innbyggðum þýðanda í því
    þróunarumhverfi. Keyrsluskráin var einnig framleidd með innbyggðu
    forriti í NetBeans.
*/
package teiknari.v2.vidmot;

import java.awt.Color;
import java.awt.Component;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Ólafur Ingi Guðmundsson
 */
// Þessi klasi heldur utan um allt viðmótið. (fyrir utan "aðstoð" gluggann")
public class Gluggi extends javax.swing.JFrame {
    
    /* Hérna tilgreini ég allar tilviksbreytur sem hver mynd fyrir sig
       sækir, þegar þörf er á. Breytunum er almennt stýrt með atburðum á
       viðmótinu. Þær heita allar mjög lýsandi nöfnum
       sem gefa til kynna hlutverk þeirra.
    */
    private static int tool;
    private static Color mainColor;
    private static Color filler;
    private static Color oldColor;
    private static boolean bucketPourAll;
    private static float transVal;
    private static int size;
    private static boolean fill;
    
    /* Smiðurinn fyrir viðmótsgluggann. Hér upphafsstilli ég allar tilviksbreyturnar
       ef þarf, og stilli viðmótið eins og ég vil að það opnist í byrjun fyrir notandann.
    */
    public Gluggi() {
        initComponents();
        this.setResizable(false);
        tool=0;
        tpMyndir.setEnabledAt(1, false);
        tpMyndir.setEnabledAt(2, false);
        tpMyndir.setEnabledAt(3, false);
        tpMyndir.setEnabledAt(4, false);
        ((Teikniblad)panMynd1).setPicName("Mynd1");         
        bucketPourAll = false;
        transVal = 1.0f;
        radHellaBakgrunn.setEnabled(false);
        radHellaMynd.setEnabled(false);
        size = 5;
        filler = Color.LIGHT_GRAY;
        mainColor = Color.BLACK;
        fill=false;
        initColorPanels();      
        setTabs();
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        bgTol = new javax.swing.ButtonGroup();
        bgStaerd = new javax.swing.ButtonGroup();
        bgFata = new javax.swing.ButtonGroup();
        panBakgrunnur = new javax.swing.JPanel();
        panStyringar = new javax.swing.JPanel();
        panTol = new javax.swing.JPanel();
        labTol = new javax.swing.JLabel();
        tbPensill = new javax.swing.JToggleButton();
        tbFata = new javax.swing.JToggleButton();
        tbStroka = new javax.swing.JToggleButton();
        tbBrusi = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JSeparator();
        tbStrengur = new javax.swing.JToggleButton();
        radHellaBakgrunn = new javax.swing.JRadioButton();
        radHellaMynd = new javax.swing.JRadioButton();
        panForm = new javax.swing.JPanel();
        labForm = new javax.swing.JLabel();
        tbKassi = new javax.swing.JToggleButton();
        tbHringur = new javax.swing.JToggleButton();
        cbFylling = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        tbLina = new javax.swing.JToggleButton();
        tbMjukurKassi = new javax.swing.JToggleButton();
        tbThrihyrningur = new javax.swing.JToggleButton();
        tb3DKassi = new javax.swing.JToggleButton();
        panStaerd = new javax.swing.JPanel();
        labStaerd = new javax.swing.JLabel();
        panStor = new javax.swing.JPanel();
        radStor = new javax.swing.JRadioButton();
        panMidlungs = new javax.swing.JPanel();
        radMidlungs = new javax.swing.JRadioButton();
        panLitil = new javax.swing.JPanel();
        radLitil = new javax.swing.JRadioButton();
        panMjogLitil = new javax.swing.JPanel();
        radMjogLitil = new javax.swing.JRadioButton();
        myndLitil = new javax.swing.JLabel();
        myndMidlungs = new javax.swing.JLabel();
        myndStor = new javax.swing.JLabel();
        myndMjogLitil = new javax.swing.JLabel();
        panGegnsaei = new javax.swing.JPanel();
        labGegnsaei = new javax.swing.JLabel();
        slGegnsaei = new javax.swing.JSlider();
        panSynaGegnsaei = new SyniBlad();
        labGegnsaeiProsent = new javax.swing.JLabel();
        panMyndStyringar = new javax.swing.JPanel();
        bNyMynd = new javax.swing.JButton();
        bLokaMynd = new javax.swing.JButton();
        bTilBaka = new javax.swing.JButton();
        bAfram = new javax.swing.JButton();
        bHreinsa = new javax.swing.JButton();
        tpMyndir = new javax.swing.JTabbedPane();
        panMynd1 = new Teikniblad();
        panMynd2 = new Teikniblad();
        panMynd3 = new Teikniblad();
        panMynd4 = new Teikniblad();
        panMynd5 = new Teikniblad();
        panLitur = new javax.swing.JPanel();
        bLitur = new javax.swing.JButton();
        panSynaLit = new SyniBlad();
        labLitur = new javax.swing.JLabel();
        panFylliLitur = new SyniBlad();
        bFylliLitur = new javax.swing.JButton();
        panRecentLitir = new javax.swing.JPanel();
        panLitur1 = new SyniBlad();
        panLitur2 = new SyniBlad();
        panLitur3 = new SyniBlad();
        jSeparator3 = new javax.swing.JSeparator();
        panRecentFylling = new javax.swing.JPanel();
        panFylling1 = new SyniBlad();
        panFylling2 = new SyniBlad();
        panFylling3 = new SyniBlad();
        jLabel1 = new javax.swing.JLabel();
        mMenuSla = new javax.swing.JMenuBar();
        mSkra = new javax.swing.JMenu();
        mOpna = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mVista = new javax.swing.JMenuItem();
        mVinnuheiti = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        mHaetta = new javax.swing.JMenuItem();
        mUpplysingar = new javax.swing.JMenu();
        mAdstod = new javax.swing.JMenuItem();
        mUmForrit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panTol.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labTol.setFont(new java.awt.Font("Tempus Sans ITC", 2, 18)); // NOI18N
        labTol.setForeground(new java.awt.Color(0, 51, 153));
        labTol.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labTol.setText("Tól");

        bgTol.add(tbPensill);
        tbPensill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/brush.png"))); // NOI18N
        tbPensill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbPensillActionPerformed(evt);
            }
        });

        bgTol.add(tbFata);
        tbFata.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Bucketc.png"))); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, bgTol, org.jdesktop.beansbinding.ELProperty.create("${selection.selected}"), tbFata, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        tbFata.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tbFataItemStateChanged(evt);
            }
        });
        tbFata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbFataActionPerformed(evt);
            }
        });

        bgTol.add(tbStroka);
        tbStroka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Eraser.png"))); // NOI18N
        tbStroka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbStrokaActionPerformed(evt);
            }
        });

        bgTol.add(tbBrusi);
        tbBrusi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Can.png"))); // NOI18N
        tbBrusi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbBrusiActionPerformed(evt);
            }
        });

        bgTol.add(tbStrengur);
        tbStrengur.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        tbStrengur.setText("ABC");
        tbStrengur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbStrengurActionPerformed(evt);
            }
        });

        bgFata.add(radHellaBakgrunn);
        radHellaBakgrunn.setSelected(true);
        radHellaBakgrunn.setText("Hella á bakgrunn");
        radHellaBakgrunn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHellaBakgrunnActionPerformed(evt);
            }
        });

        bgFata.add(radHellaMynd);
        radHellaMynd.setText("Hella yfir mynd");
        radHellaMynd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radHellaMyndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panTolLayout = new javax.swing.GroupLayout(panTol);
        panTol.setLayout(panTolLayout);
        panTolLayout.setHorizontalGroup(
            panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labTol, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panTolLayout.createSequentialGroup()
                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panTolLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panTolLayout.createSequentialGroup()
                                .addComponent(tbFata, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panTolLayout.createSequentialGroup()
                                        .addComponent(radHellaMynd, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(radHellaBakgrunn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panTolLayout.createSequentialGroup()
                                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbPensill, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbBrusi, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tbStrengur, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbStroka, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panTolLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2)))
                .addContainerGap())
        );
        panTolLayout.setVerticalGroup(
            panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTolLayout.createSequentialGroup()
                .addComponent(labTol)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tbPensill, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbStroka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbStrengur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbBrusi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panTolLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbFata, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panTolLayout.createSequentialGroup()
                        .addComponent(radHellaBakgrunn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radHellaMynd)))
                .addContainerGap())
        );

        panForm.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labForm.setFont(new java.awt.Font("Tempus Sans ITC", 2, 18)); // NOI18N
        labForm.setForeground(new java.awt.Color(0, 51, 153));
        labForm.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labForm.setText("Form");

        bgTol.add(tbKassi);
        tbKassi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Rect.png"))); // NOI18N
        tbKassi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbKassiActionPerformed(evt);
            }
        });

        bgTol.add(tbHringur);
        tbHringur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Circle.png"))); // NOI18N
        tbHringur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbHringurActionPerformed(evt);
            }
        });

        cbFylling.setText("Fylling");
        cbFylling.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbFyllingItemStateChanged(evt);
            }
        });

        bgTol.add(tbLina);
        tbLina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Line.png"))); // NOI18N
        tbLina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbLinaActionPerformed(evt);
            }
        });

        bgTol.add(tbMjukurKassi);
        tbMjukurKassi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/RoundRect.png"))); // NOI18N
        tbMjukurKassi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbMjukurKassiActionPerformed(evt);
            }
        });

        bgTol.add(tbThrihyrningur);
        tbThrihyrningur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Triangle.png"))); // NOI18N
        tbThrihyrningur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbThrihyrningurActionPerformed(evt);
            }
        });
        tbThrihyrningur.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tbThrihyrningurPropertyChange(evt);
            }
        });

        bgTol.add(tb3DKassi);
        tb3DKassi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/Rect3D.png"))); // NOI18N
        tb3DKassi.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tb3DKassiItemStateChanged(evt);
            }
        });
        tb3DKassi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tb3DKassiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panFormLayout = new javax.swing.GroupLayout(panForm);
        panForm.setLayout(panFormLayout);
        panFormLayout.setHorizontalGroup(
            panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(panFormLayout.createSequentialGroup()
                        .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tb3DKassi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbKassi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbHringur, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbMjukurKassi, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tbLina, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tbThrihyrningur, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(cbFylling))
                .addContainerGap())
        );
        panFormLayout.setVerticalGroup(
            panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFormLayout.createSequentialGroup()
                .addComponent(labForm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbHringur, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbKassi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbLina, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tb3DKassi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tbThrihyrningur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tbMjukurKassi, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbFylling)
                .addGap(35, 35, 35))
        );

        panStaerd.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labStaerd.setFont(new java.awt.Font("Tempus Sans ITC", 2, 18)); // NOI18N
        labStaerd.setForeground(new java.awt.Color(0, 51, 153));
        labStaerd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labStaerd.setText("Stærð");

        bgStaerd.add(radStor);
        radStor.setText("Stór");
        radStor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radStorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panStorLayout = new javax.swing.GroupLayout(panStor);
        panStor.setLayout(panStorLayout);
        panStorLayout.setHorizontalGroup(
            panStorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStorLayout.createSequentialGroup()
                .addComponent(radStor, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panStorLayout.setVerticalGroup(
            panStorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStorLayout.createSequentialGroup()
                .addComponent(radStor)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        bgStaerd.add(radMidlungs);
        radMidlungs.setSelected(true);
        radMidlungs.setText("Miðlungs");
        radMidlungs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMidlungsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panMidlungsLayout = new javax.swing.GroupLayout(panMidlungs);
        panMidlungs.setLayout(panMidlungsLayout);
        panMidlungsLayout.setHorizontalGroup(
            panMidlungsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMidlungsLayout.createSequentialGroup()
                .addComponent(radMidlungs, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panMidlungsLayout.setVerticalGroup(
            panMidlungsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(radMidlungs)
        );

        bgStaerd.add(radLitil);
        radLitil.setText("Lítil");
        radLitil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radLitilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panLitilLayout = new javax.swing.GroupLayout(panLitil);
        panLitil.setLayout(panLitilLayout);
        panLitilLayout.setHorizontalGroup(
            panLitilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLitilLayout.createSequentialGroup()
                .addComponent(radLitil, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panLitilLayout.setVerticalGroup(
            panLitilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLitilLayout.createSequentialGroup()
                .addComponent(radLitil, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bgStaerd.add(radMjogLitil);
        radMjogLitil.setText("Mjög lítil");
        radMjogLitil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMjogLitilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panMjogLitilLayout = new javax.swing.GroupLayout(panMjogLitil);
        panMjogLitil.setLayout(panMjogLitilLayout);
        panMjogLitilLayout.setHorizontalGroup(
            panMjogLitilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMjogLitilLayout.createSequentialGroup()
                .addComponent(radMjogLitil, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panMjogLitilLayout.setVerticalGroup(
            panMjogLitilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(radMjogLitil, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        myndLitil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/SmallLine.png"))); // NOI18N
        myndLitil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                myndLitilMousePressed(evt);
            }
        });

        myndMidlungs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/MiddleLine.png"))); // NOI18N
        myndMidlungs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                myndMidlungsMousePressed(evt);
            }
        });

        myndStor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/LargeLine.png"))); // NOI18N
        myndStor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                myndStorMousePressed(evt);
            }
        });

        myndMjogLitil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/verySmallLine.png"))); // NOI18N
        myndMjogLitil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                myndMjogLitilMousePressed(evt);
            }
        });

        javax.swing.GroupLayout panStaerdLayout = new javax.swing.GroupLayout(panStaerd);
        panStaerd.setLayout(panStaerdLayout);
        panStaerdLayout.setHorizontalGroup(
            panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labStaerd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panStaerdLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panMjogLitil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panLitil, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panMidlungs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panStor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(myndStor, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(myndMidlungs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(myndLitil, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(myndMjogLitil, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panStaerdLayout.setVerticalGroup(
            panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStaerdLayout.createSequentialGroup()
                .addComponent(labStaerd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panStor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myndStor, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panMidlungs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myndMidlungs, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panLitil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myndLitil, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panStaerdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panMjogLitil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(myndMjogLitil))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panGegnsaei.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        labGegnsaei.setFont(new java.awt.Font("Tempus Sans ITC", 2, 18)); // NOI18N
        labGegnsaei.setForeground(new java.awt.Color(0, 51, 153));
        labGegnsaei.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labGegnsaei.setText("Gegnsæi");

        slGegnsaei.setValue(100);
        slGegnsaei.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slGegnsaeiStateChanged(evt);
            }
        });

        panSynaGegnsaei.setBackground(new java.awt.Color(255, 255, 255));
        panSynaGegnsaei.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panSynaGegnsaeiLayout = new javax.swing.GroupLayout(panSynaGegnsaei);
        panSynaGegnsaei.setLayout(panSynaGegnsaeiLayout);
        panSynaGegnsaeiLayout.setHorizontalGroup(
            panSynaGegnsaeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );
        panSynaGegnsaeiLayout.setVerticalGroup(
            panSynaGegnsaeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );

        labGegnsaeiProsent.setText("100%");

        javax.swing.GroupLayout panGegnsaeiLayout = new javax.swing.GroupLayout(panGegnsaei);
        panGegnsaei.setLayout(panGegnsaeiLayout);
        panGegnsaeiLayout.setHorizontalGroup(
            panGegnsaeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panGegnsaeiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slGegnsaei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(labGegnsaei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panGegnsaeiLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(panSynaGegnsaei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labGegnsaeiProsent)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panGegnsaeiLayout.setVerticalGroup(
            panGegnsaeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panGegnsaeiLayout.createSequentialGroup()
                .addComponent(labGegnsaei)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slGegnsaei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(panGegnsaeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panGegnsaeiLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(labGegnsaeiProsent))
                    .addGroup(panGegnsaeiLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panSynaGegnsaei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panStyringarLayout = new javax.swing.GroupLayout(panStyringar);
        panStyringar.setLayout(panStyringarLayout);
        panStyringarLayout.setHorizontalGroup(
            panStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStyringarLayout.createSequentialGroup()
                .addGroup(panStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panStaerd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panForm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panTol, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panGegnsaei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panStyringarLayout.setVerticalGroup(
            panStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panStyringarLayout.createSequentialGroup()
                .addComponent(panTol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panForm, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panStaerd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panGegnsaei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panMyndStyringar.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bNyMynd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/GreenPlus-Sized.png"))); // NOI18N
        bNyMynd.setText("Opna nýtt blað");
        bNyMynd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNyMyndActionPerformed(evt);
            }
        });

        bLokaMynd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/delete_16.png"))); // NOI18N
        bLokaMynd.setText(" Henda blaði");
        bLokaMynd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLokaMyndActionPerformed(evt);
            }
        });

        bTilBaka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/undo_16.png"))); // NOI18N
        bTilBaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTilBakaActionPerformed(evt);
            }
        });

        bAfram.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/redo_16.png"))); // NOI18N
        bAfram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAframActionPerformed(evt);
            }
        });

        bHreinsa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/newPic.png"))); // NOI18N
        bHreinsa.setText("Hreinsa blað");
        bHreinsa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHreinsaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panMyndStyringarLayout = new javax.swing.GroupLayout(panMyndStyringar);
        panMyndStyringar.setLayout(panMyndStyringarLayout);
        panMyndStyringarLayout.setHorizontalGroup(
            panMyndStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMyndStyringarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panMyndStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMyndStyringarLayout.createSequentialGroup()
                        .addComponent(bTilBaka, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bAfram, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bNyMynd, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panMyndStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bLokaMynd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bHreinsa, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panMyndStyringarLayout.setVerticalGroup(
            panMyndStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMyndStyringarLayout.createSequentialGroup()
                .addGroup(panMyndStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bNyMynd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bLokaMynd, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panMyndStyringarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bAfram)
                    .addComponent(bTilBaka)
                    .addComponent(bHreinsa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tpMyndir.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        panMynd1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panMynd1Layout = new javax.swing.GroupLayout(panMynd1);
        panMynd1.setLayout(panMynd1Layout);
        panMynd1Layout.setHorizontalGroup(
            panMynd1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
        );
        panMynd1Layout.setVerticalGroup(
            panMynd1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 757, Short.MAX_VALUE)
        );

        tpMyndir.addTab("Mynd1", panMynd1);

        panMynd2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panMynd2Layout = new javax.swing.GroupLayout(panMynd2);
        panMynd2.setLayout(panMynd2Layout);
        panMynd2Layout.setHorizontalGroup(
            panMynd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
        );
        panMynd2Layout.setVerticalGroup(
            panMynd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 757, Short.MAX_VALUE)
        );

        tpMyndir.addTab("", panMynd2);

        panMynd3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panMynd3Layout = new javax.swing.GroupLayout(panMynd3);
        panMynd3.setLayout(panMynd3Layout);
        panMynd3Layout.setHorizontalGroup(
            panMynd3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
        );
        panMynd3Layout.setVerticalGroup(
            panMynd3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 757, Short.MAX_VALUE)
        );

        tpMyndir.addTab("", panMynd3);

        panMynd4.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panMynd4Layout = new javax.swing.GroupLayout(panMynd4);
        panMynd4.setLayout(panMynd4Layout);
        panMynd4Layout.setHorizontalGroup(
            panMynd4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
        );
        panMynd4Layout.setVerticalGroup(
            panMynd4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 757, Short.MAX_VALUE)
        );

        tpMyndir.addTab("", panMynd4);

        panMynd5.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panMynd5Layout = new javax.swing.GroupLayout(panMynd5);
        panMynd5.setLayout(panMynd5Layout);
        panMynd5Layout.setHorizontalGroup(
            panMynd5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 829, Short.MAX_VALUE)
        );
        panMynd5Layout.setVerticalGroup(
            panMynd5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 757, Short.MAX_VALUE)
        );

        tpMyndir.addTab("", panMynd5);

        panLitur.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        bLitur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/ColorWheel-BaseSmall.png"))); // NOI18N
        bLitur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLiturActionPerformed(evt);
            }
        });

        panSynaLit.setBackground(new java.awt.Color(255, 255, 255));
        panSynaLit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panSynaLitLayout = new javax.swing.GroupLayout(panSynaLit);
        panSynaLit.setLayout(panSynaLitLayout);
        panSynaLitLayout.setHorizontalGroup(
            panSynaLitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panSynaLitLayout.setVerticalGroup(
            panSynaLitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        labLitur.setFont(new java.awt.Font("Tempus Sans ITC", 2, 18)); // NOI18N
        labLitur.setForeground(new java.awt.Color(0, 51, 153));
        labLitur.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labLitur.setText("Litur");

        panFylliLitur.setBackground(new java.awt.Color(255, 255, 255));
        panFylliLitur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panFylliLitur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panFylliLiturMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panFylliLiturLayout = new javax.swing.GroupLayout(panFylliLitur);
        panFylliLitur.setLayout(panFylliLiturLayout);
        panFylliLiturLayout.setHorizontalGroup(
            panFylliLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 58, Short.MAX_VALUE)
        );
        panFylliLiturLayout.setVerticalGroup(
            panFylliLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        bFylliLitur.setIcon(new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/ColorWheel-BaseSmall.png"))); // NOI18N
        bFylliLitur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFylliLiturActionPerformed(evt);
            }
        });

        panLitur1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panLitur1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panLitur1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panLitur1Layout = new javax.swing.GroupLayout(panLitur1);
        panLitur1.setLayout(panLitur1Layout);
        panLitur1Layout.setHorizontalGroup(
            panLitur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        panLitur1Layout.setVerticalGroup(
            panLitur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        panLitur2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panLitur2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panLitur2MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panLitur2Layout = new javax.swing.GroupLayout(panLitur2);
        panLitur2.setLayout(panLitur2Layout);
        panLitur2Layout.setHorizontalGroup(
            panLitur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        panLitur2Layout.setVerticalGroup(
            panLitur2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panLitur3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panLitur3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panLitur3MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panLitur3Layout = new javax.swing.GroupLayout(panLitur3);
        panLitur3.setLayout(panLitur3Layout);
        panLitur3Layout.setHorizontalGroup(
            panLitur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        panLitur3Layout.setVerticalGroup(
            panLitur3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panRecentLitirLayout = new javax.swing.GroupLayout(panRecentLitir);
        panRecentLitir.setLayout(panRecentLitirLayout);
        panRecentLitirLayout.setHorizontalGroup(
            panRecentLitirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panRecentLitirLayout.createSequentialGroup()
                .addComponent(panLitur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panLitur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panLitur3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panRecentLitirLayout.setVerticalGroup(
            panRecentLitirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panLitur1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panLitur2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panLitur3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        panFylling1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panFylling1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panFylling1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panFylling1Layout = new javax.swing.GroupLayout(panFylling1);
        panFylling1.setLayout(panFylling1Layout);
        panFylling1Layout.setHorizontalGroup(
            panFylling1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        panFylling1Layout.setVerticalGroup(
            panFylling1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        panFylling2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panFylling2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panFylling2MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panFylling2Layout = new javax.swing.GroupLayout(panFylling2);
        panFylling2.setLayout(panFylling2Layout);
        panFylling2Layout.setHorizontalGroup(
            panFylling2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        panFylling2Layout.setVerticalGroup(
            panFylling2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        panFylling3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panFylling3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panFylling3MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout panFylling3Layout = new javax.swing.GroupLayout(panFylling3);
        panFylling3.setLayout(panFylling3Layout);
        panFylling3Layout.setHorizontalGroup(
            panFylling3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        panFylling3Layout.setVerticalGroup(
            panFylling3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panRecentFyllingLayout = new javax.swing.GroupLayout(panRecentFylling);
        panRecentFylling.setLayout(panRecentFyllingLayout);
        panRecentFyllingLayout.setHorizontalGroup(
            panRecentFyllingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panRecentFyllingLayout.createSequentialGroup()
                .addComponent(panFylling1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panFylling2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panFylling3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panRecentFyllingLayout.setVerticalGroup(
            panRecentFyllingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panFylling1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panFylling2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panFylling3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Fylling");

        javax.swing.GroupLayout panLiturLayout = new javax.swing.GroupLayout(panLitur);
        panLitur.setLayout(panLiturLayout);
        panLiturLayout.setHorizontalGroup(
            panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLiturLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panSynaLit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labLitur, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bLitur, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panRecentLitir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panFylliLitur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bFylliLitur, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panRecentFylling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        panLiturLayout.setVerticalGroup(
            panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLiturLayout.createSequentialGroup()
                .addGroup(panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labLitur)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panLiturLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panLiturLayout.createSequentialGroup()
                                .addGroup(panLiturLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(panSynaLit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bLitur, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(bFylliLitur, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(panFylliLitur, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panLiturLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panRecentLitir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
            .addComponent(jSeparator3)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panLiturLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panRecentFylling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout panBakgrunnurLayout = new javax.swing.GroupLayout(panBakgrunnur);
        panBakgrunnur.setLayout(panBakgrunnurLayout);
        panBakgrunnurLayout.setHorizontalGroup(
            panBakgrunnurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBakgrunnurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panStyringar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panBakgrunnurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panBakgrunnurLayout.createSequentialGroup()
                        .addComponent(panLitur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panMyndStyringar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tpMyndir))
                .addContainerGap())
        );
        panBakgrunnurLayout.setVerticalGroup(
            panBakgrunnurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBakgrunnurLayout.createSequentialGroup()
                .addGroup(panBakgrunnurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panBakgrunnurLayout.createSequentialGroup()
                        .addGroup(panBakgrunnurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panLitur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panMyndStyringar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tpMyndir, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panStyringar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mSkra.setText("Skrá");

        mOpna.setText("Opna mynd");
        mOpna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOpnaActionPerformed(evt);
            }
        });
        mSkra.add(mOpna);
        mSkra.add(jSeparator4);

        mVista.setText("Vista mynd");
        mVista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mVistaActionPerformed(evt);
            }
        });
        mSkra.add(mVista);

        mVinnuheiti.setText("Breyta vinnuheiti á mynd");
        mVinnuheiti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mVinnuheitiActionPerformed(evt);
            }
        });
        mSkra.add(mVinnuheiti);
        mSkra.add(jSeparator5);

        mHaetta.setText("Hætta");
        mHaetta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mHaettaActionPerformed(evt);
            }
        });
        mSkra.add(mHaetta);

        mMenuSla.add(mSkra);

        mUpplysingar.setText("Upplýsingar");

        mAdstod.setText("Aðstoð");
        mAdstod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAdstodActionPerformed(evt);
            }
        });
        mUpplysingar.add(mAdstod);

        mUmForrit.setText("Um forritið");
        mUmForrit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mUmForritActionPerformed(evt);
            }
        });
        mUpplysingar.add(mUmForrit);

        mMenuSla.add(mUpplysingar);

        setJMenuBar(mMenuSla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panBakgrunnur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panBakgrunnur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /* Atburðahandler þegar smellt er á pensilinn á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbPensillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbPensillActionPerformed
        tool = 1;        
    }//GEN-LAST:event_tbPensillActionPerformed

    /* Næstu fjögur föll eru atburðahandlerar þegar smellt er á radio-takkana
       í dálknum "stærð" á viðmótinu. size heldur utan um stærðina fyrir tól og
       form, sem blöðin sækja svo þegar þarf.
    */
    private void radStorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radStorActionPerformed
        size=10;
    }//GEN-LAST:event_radStorActionPerformed

    private void radMidlungsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMidlungsActionPerformed
        size=5;
    }//GEN-LAST:event_radMidlungsActionPerformed

    private void radLitilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radLitilActionPerformed
        size=2;
    }//GEN-LAST:event_radLitilActionPerformed

    private void radMjogLitilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMjogLitilActionPerformed
        size=1;
    }//GEN-LAST:event_radMjogLitilActionPerformed

    /* Atburðahandler þegar smellt er á litahjólið fyrir litinn "Litur". 
       Ég notfæri mér JColorChooser til að leyfa notanda að velja lit.
       Ég nota svo oldColor til að ganga úr skugga um að ef notandi ýtir á cancel
       Í JColorChooser, að þá verði default liturinn, liturinn sem var áður en
       smellt var á litahjólið, í staðinn fyrir einhvern fastann lit.
       mainColor heldur þá utan um aðallitinn sem blöðin sækja þegar þarf.
       Einnig kalla ég hér á setRecentColors() fallið, sem sér um að geyma
       nýlega liti.
    */
    private void bLiturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLiturActionPerformed
        if(mainColor!=null) oldColor = mainColor;
        
        mainColor = JColorChooser.showDialog(this, "Veldu lit", mainColor);
        
        if(mainColor==null) setMainColor(oldColor);
        else setMainColor(mainColor);
        
        ((SyniBlad)panSynaLit).setColor(mainColor);
        if(mainColor!=oldColor) setRecentColors();
    }//GEN-LAST:event_bLiturActionPerformed

    /* Atburðahandler þegar smellt er á fötuna á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbFataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbFataActionPerformed
        tool=2;
    }//GEN-LAST:event_tbFataActionPerformed

    /* Atburðahandler þegar smellt er á fötuna á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbStrokaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbStrokaActionPerformed
        tool=3;
    }//GEN-LAST:event_tbStrokaActionPerformed

    // Lokar forritinu þegar smellt er á Ská - Hætta á valslánni.
    private void mHaettaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mHaettaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mHaettaActionPerformed

    /* Atburðahandler þegar smellt er á Til-baka takkann í viðmótinu.
       Kallar á fall sem finnur núverandi opna mynd kallar á fall í þeirri mynd
       undo()
    */
    private void bTilBakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTilBakaActionPerformed

        if(getCurrentPic()!=null){
            getCurrentPic().undo();
        }
    }//GEN-LAST:event_bTilBakaActionPerformed

    /* Atburðahandler þegar smellt er á Áfram takkann í viðmótinu.
       Kallar á fall sem finnur núverandi opna mynd kallar á fall í þeirri mynd
       redo()
    */
    private void bAframActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAframActionPerformed

        if(getCurrentPic()!=null){
            getCurrentPic().redo();
        }
    }//GEN-LAST:event_bAframActionPerformed

    /* Atburðahandler fyrir takkann "Opna nýtt blað" á viðmótinu.
       Gengur úr skugga um að rétt mynd sé opnuð í tabbed-pane sem heldur utan um
       allar myndirnar.
       Opnar einnig glugga sem biður notanda um að velja vinnuheiti á myndina.
    */
    private void bNyMyndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNyMyndActionPerformed

        if(tpMyndir.isEnabledAt(3)&& tpMyndir.isEnabledAt(2) && tpMyndir.isEnabledAt(1) && tpMyndir.isEnabledAt(0)
                    && tpMyndir.isEnabledAt(4)){
                JOptionPane.showMessageDialog(this, "Einungis er hægt að hafa fimm myndir opnar í einu");
            }
        else{
            String name = JOptionPane.showInputDialog("Veldu vinnuheiti á myndina þína: ");
            if(name!=null){

                if(tpMyndir.isEnabledAt(3)&& tpMyndir.isEnabledAt(2) && tpMyndir.isEnabledAt(1) && tpMyndir.isEnabledAt(0)){
                    tpMyndir.setEnabledAt(4, true);
                    tpMyndir.setSelectedIndex(4);
                    panMynd5.setVisible(true);
                }
                else if(tpMyndir.isEnabledAt(2) && tpMyndir.isEnabledAt(1) && tpMyndir.isEnabledAt(0)){
                    tpMyndir.setEnabledAt(3, true);
                    tpMyndir.setSelectedIndex(3);
                    panMynd4.setVisible(true);
                }
                else if(tpMyndir.isEnabledAt(1) && tpMyndir.isEnabledAt(0)){
                    tpMyndir.setEnabledAt(2, true);
                    tpMyndir.setSelectedIndex(2);
                    panMynd3.setVisible(true);
                }
                else if(tpMyndir.isEnabledAt(0)){
                    tpMyndir.setEnabledAt(1, true);
                    tpMyndir.setSelectedIndex(1);
                    panMynd2.setVisible(true);
                }
                else{
                    tpMyndir.setEnabledAt(0, true);
                    tpMyndir.setSelectedIndex(0);
                    panMynd1.setVisible(true);
                }

                setPicName(name);
            }
        }
        
    }//GEN-LAST:event_bNyMyndActionPerformed

    /* Atburðahandler fyrir takkann "Henda blaði" á viðmótinu.
       Gengur úr skugga um að núverandi opna myndin sé sú sem skal lokað.
       Ef teiknað hefur verið á myndina þá opnast staðfestingargluggi áður en
       lokað er.
    */
    private void bLokaMyndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLokaMyndActionPerformed

        if(getCurrentPic()!=null){
            int option = 0;
            if(getCurrentPic().getCounter()!=0){
                option = JOptionPane.showConfirmDialog(null, 
                        "Ertu viss um að þú viljir loka \""+getCurrentPic().getPicName()+"\"","Staðfesting",
                        JOptionPane.OK_CANCEL_OPTION);
            }
            if(option==0){

                getCurrentPic().clearPic();

                if(panMynd5.isShowing()){
                    tpMyndir.setEnabledAt(4, false);
                    tpMyndir.setTitleAt(4, null);
                }
                else if(panMynd4.isShowing()){
                    tpMyndir.setEnabledAt(3, false);
                    tpMyndir.setTitleAt(3, null);
                }
                else if(panMynd3.isShowing()){
                    tpMyndir.setEnabledAt(2, false);
                    tpMyndir.setTitleAt(2, null);
                }
                else if(panMynd2.isShowing()){
                    tpMyndir.setEnabledAt(1, false);
                    tpMyndir.setTitleAt(1, null);                          
                }
                else if(panMynd1.isShowing()){
                    tpMyndir.setEnabledAt(0, false);
                    tpMyndir.setTitleAt(0, null);                 
                }
                tpMyndir.setSelectedIndex(-1);
            }
        }
        

    }//GEN-LAST:event_bLokaMyndActionPerformed

    /* Atburðahandler fyrir "Hreinsa blað" takkann á viðmótinu.
       Gengur úr skugga um að aðeins núverandi opna blaðið sé hreinsað og
       að ef búið er að teikna á það, þá komi staðfestingargluggi.   
    */
    private void bHreinsaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHreinsaActionPerformed

        if(getCurrentPic()!=null){
            if(getCurrentPic().getCounter()!=0){
                int option = JOptionPane.showConfirmDialog(null, 
                        "Ertu viss um að þú viljir hreinsa allt af myndinni \""+getCurrentPic().getPicName()+"\". \n"
                                + "Það er ekki hægt að hætta við eftir hreinsun.","Staðfesting",
                        JOptionPane.OK_CANCEL_OPTION);

                if(option==0) getCurrentPic().clearPic();
            }
        }
        
    }//GEN-LAST:event_bHreinsaActionPerformed

    /* Atburðahandler þegar smellt er á litahjólið fyrir litinn "Fylling". 
       Ég notfæri mér JColorChooser til að leyfa notanda að velja lit.
       Ég nota svo oldColor til að ganga úr skugga um að ef notandi ýtir á cancel
       Í JColorChooser, að þá verði default liturinn, liturinn sem var áður en
       smellt var á litahjólið, í staðinn fyrir einhvern fastann lit.
       filler heldur þá utan um fyllingarlitinn sem blöðin sækja þegar þarf.
       Einnig kalla ég hér á setRecentFillerColors() fallið, sem sér um að geyma
       nýlega fyllingar-liti.
    */
    private void bFylliLiturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFylliLiturActionPerformed

        if(filler!=null) oldColor = filler;
        filler = JColorChooser.showDialog(this, "Veldu fyllingar-lit", filler);
        if(filler==null) setFiller(oldColor);
        else setFiller(filler);
        ((SyniBlad)panFylliLitur).setColor(filler);
        if(oldColor!=filler) seRecentFillerColors();
    }//GEN-LAST:event_bFylliLiturActionPerformed

    /* Atburðahandler þegar smellt er á beinu línuna, undir form, á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbLinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbLinaActionPerformed

        tool=7;
    }//GEN-LAST:event_tbLinaActionPerformed

    /* Atburðahandler þegar smellt er á ferhyrningsformið, á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbKassiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbKassiActionPerformed

        tool=5;
    }//GEN-LAST:event_tbKassiActionPerformed

    /* Atburðahandler þegar fylling er á og ekki á, í checkbox-inu fyrir form.
       fill heldur utan um það með boolean breytu, og blöðin sækja sér þær 
       upplýsingar þegar þarf.
    */
    private void cbFyllingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbFyllingItemStateChanged

        if(cbFylling.isSelected()){
            fill = true;
        }
        else{
            fill = false;
        }
    }//GEN-LAST:event_cbFyllingItemStateChanged

    /* Atburðahandler þegar smellt er á hringformið, á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbHringurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbHringurActionPerformed

        tool=6;
    }//GEN-LAST:event_tbHringurActionPerformed

    /* Atburðahandler þegar smellt er á kassann með mýkri brúnum, á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbMjukurKassiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbMjukurKassiActionPerformed

        tool=9;
    }//GEN-LAST:event_tbMjukurKassiActionPerformed

    /* Atburðahandler þegar smellt er á kassann sem merktur er 3D, á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tb3DKassiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tb3DKassiActionPerformed

        tool=8;
    
    }//GEN-LAST:event_tb3DKassiActionPerformed

    /* Atburðahandler þegar smellt er á þríhyrninginn, á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbThrihyrningurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbThrihyrningurActionPerformed

        tool=10;
    }//GEN-LAST:event_tbThrihyrningurActionPerformed

    /* Handler sem sér um það, þegar 3D kassinn er valinn, eða ekki valinn, á viðmótinu.
       Ef 3D kassinn er valinn þá er ekki hægt að stilla stærðina og ekki heldur hægt
       að velja hvort fylling sé á eða ekki.
    */
    private void tb3DKassiItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tb3DKassiItemStateChanged

        
        if(tb3DKassi.isSelected()){
            radStor.setEnabled(false);
            radMidlungs.setEnabled(false);
            radLitil.setEnabled(false);
            radMjogLitil.setEnabled(false);
            
            cbFylling.setSelected(true);
            cbFylling.setEnabled(false);    
        }
        else{
            radStor.setEnabled(true);
            radMidlungs.setEnabled(true);
            radLitil.setEnabled(true);
            radMjogLitil.setEnabled(true);
            
            cbFylling.setEnabled(true);  
        }
    }//GEN-LAST:event_tb3DKassiItemStateChanged

    // Atburðahandler fyrir radio-takkann sem stillir að fatan eigi bara að hella á bakgrunn.
    private void radHellaBakgrunnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHellaBakgrunnActionPerformed

        bucketPourAll = false;
    }//GEN-LAST:event_radHellaBakgrunnActionPerformed

    // Atburðahandler fyrir radio-takkann sem stillir að fatan eigi að hella yfir alla myndina.
    private void radHellaMyndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radHellaMyndActionPerformed

        bucketPourAll = true;
    }//GEN-LAST:event_radHellaMyndActionPerformed

    /* Atburðahandler þegar smellt er á texta-tólið (ABC), á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbStrengurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbStrengurActionPerformed

        tool=11;
    }//GEN-LAST:event_tbStrengurActionPerformed

    /* Handler sem sem sér um að breyta gildinu á gegnsæinu þegar notandi 
       færir stikuna á gegnsæis-slidernum.
       Einnig stillir hann textann á viðmótinu sem gefur prósentuna á gegnsæinu.
       transval heldur utan um gegnsæið sem blöðin sækja svo upplýsingar um þegar þarf.
    */
    private void slGegnsaeiStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slGegnsaeiStateChanged

        transVal = (float)(slGegnsaei.getValue()*.01);
        ((SyniBlad)panSynaGegnsaei).setTransParency(transVal);
        
        labGegnsaeiProsent.setText((int)(transVal*100)+"%");
    }//GEN-LAST:event_slGegnsaeiStateChanged

    /* Handler sem gengur úr skugga um að alltaf þegar fatan er valin, þá
       eru radio-takkarnir "Hella á bakgrunn" og "Hella yfir mynd" virkir,
       en ekki virkir ef fatan er ekki valin.
    */
    private void tbFataItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tbFataItemStateChanged

        if(tbFata.isSelected()){
            radHellaBakgrunn.setEnabled(true);
            radHellaMynd.setEnabled(true);
        }
        else{
            radHellaBakgrunn.setEnabled(false);
            radHellaMynd.setEnabled(false);
        }
    }//GEN-LAST:event_tbFataItemStateChanged

    /* Handler sem stillir aðal-litinn þann sama og er á glugganum lengst til vinstri
       í "Litur" nýlegu litunum.   
    */
    private void panLitur1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panLitur1MouseReleased

        mainColor = ((SyniBlad)panLitur1).getColor();
        ((SyniBlad)panSynaLit).setColor(mainColor);
    }//GEN-LAST:event_panLitur1MouseReleased

    /* Handler sem stillir aðal-litinn þann sama og er á glugganum í miðjunni
       í "Litur" nýlegu litunum.
    */
    private void panLitur2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panLitur2MouseReleased

        mainColor = ((SyniBlad)panLitur2).getColor();
        ((SyniBlad)panSynaLit).setColor(mainColor);
    }//GEN-LAST:event_panLitur2MouseReleased

    /* Handler sem stillir aðal-litinn þann sama og er á glugganum lengst til hægri
       í "Litur" nýlegu litunum.   
    */
    private void panLitur3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panLitur3MouseReleased

        mainColor = ((SyniBlad)panLitur3).getColor();
        ((SyniBlad)panSynaLit).setColor(mainColor);
    }//GEN-LAST:event_panLitur3MouseReleased

    /* Handler sem stillir aðal-litinn þann sama og er á glugganum lengst til vinstr
       í "Fylling" nýlegu litunum.   
    */
    private void panFylling1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panFylling1MouseReleased

        filler = ((SyniBlad)panFylling1).getColor();
        ((SyniBlad)panFylliLitur).setColor(filler);
    }//GEN-LAST:event_panFylling1MouseReleased

    /* Handler sem stillir aðal-litinn þann sama og er á glugganum í miðjunni
       í "Fylling" nýlegu litunum.   
    */
    private void panFylling2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panFylling2MouseReleased

        filler = ((SyniBlad)panFylling2).getColor();
        ((SyniBlad)panFylliLitur).setColor(filler);
    }//GEN-LAST:event_panFylling2MouseReleased

    /* Handler sem stillir aðal-litinn þann sama og er á glugganum lengst til hægri
       í "Fylling" nýlegu litunum.   
    */
    private void panFylling3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panFylling3MouseReleased

        filler = ((SyniBlad)panFylling3).getColor();
        ((SyniBlad)panFylliLitur).setColor(filler);
    }//GEN-LAST:event_panFylling3MouseReleased

    /* Atburðahandler þegar smellt er á spreybrúsann), á viðmótinu.
       tool heldur utan um hvaða teiknitól skal nota, og myndirnar sækja sér
       þær upplýsingar þegar þarf.
    */
    private void tbBrusiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbBrusiActionPerformed

        tool=4;
    }//GEN-LAST:event_tbBrusiActionPerformed

    /* Atburðahandler fyrir það þegar smellt er á núverandi fyllingarlits gluggann.
       Stillir á að fylling sé valin.    
    */
    private void panFylliLiturMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panFylliLiturMouseClicked

        cbFylling.setSelected(true);
    }//GEN-LAST:event_panFylliLiturMouseClicked

    /* Atburðahandler fyrir það þegar smellt er á Skrá - Breyta vinnuheiti á mynd.
       Opnar glugga þar sem notandi getur skráð nýtt vinnuheiti á núverandi opna mynd.
    */
    private void mVinnuheitiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mVinnuheitiActionPerformed

        if(getCurrentPic()!=null){
            String name = JOptionPane.showInputDialog("Veldu vinnuheiti á myndina þína: ");
            if(name!=null){
                tpMyndir.setTitleAt(getCurrentPic().getTab(), name);
                getCurrentPic().setPicName(name);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Fyrst þarf að velja mynd sem á að nefna.", "Athugasemd", 1);
        }
    }//GEN-LAST:event_mVinnuheitiActionPerformed

    /* Atburðahandler fyrir það þegar notandi smellir á Skrá - Vista mynd.
       Notar JFileChooser til að velja staðsetningu og heiti á myndinni eins og notandi
       vill vista hana. Einnig passa ég að JFileChooserinn byrji með þann valmöguleika að geta
       bara séð möppur og svo skrár sem enda á .png , þar sem ætlast er til að myndir séu vistaðar þannig.
       Hér er einnig passað að vinnuheiti myndar sem það nafn sem er upphaflega sett í
       skráningargluggann fyrir nafn. Þetta er mikilvægt svo notandi átti sig á að myndin þurfi að enda á
       .png, og minnkar líkur á að slíkt sé ekki gert.
       Einnig geng ég úr skugga um að ef notandi ætlar sér að yfirskrifa skrá sem er þegar til, þá
       komi upp staðfestingargluggi.    
    */
    private void mVistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mVistaActionPerformed
          
        if(getCurrentPic()!=null){
            JFileChooser vistari = new JFileChooser();
            String saveName = getCurrentPic().getPicName()+".png";
            vistari.setSelectedFile(new File(saveName));
            vistari.setCurrentDirectory(null);
            vistari.setDialogTitle("Vista mynd");
            FileFilter filter = new FileNameExtensionFilter("PNG (*.png)", "png");
            vistari.setFileFilter(filter);
            int result = vistari.showSaveDialog(this);
            int skrifaYfir = 0;
            
            if(result==JFileChooser.APPROVE_OPTION){
                File f = vistari.getSelectedFile();
                saveName = f.getName();
                 if(f.exists()){
                    skrifaYfir = JOptionPane.showConfirmDialog(null, "Ertu viss um að þú viljir skrifa yfir myndina: "
                            +saveName, "Staðfesting",JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                }
                saveName = f.getAbsolutePath();
                
                if(skrifaYfir == 0){

                    try {
                        savePicture(getCurrentPic(),saveName);
                    } catch (Exception ex) {
                        Logger.getLogger(Gluggi.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }    
        }
        else{
            JOptionPane.showMessageDialog(null, "Fyrst þarf að velja mynd sem á að vista.", "Athugasemd", 1);
        }
    }//GEN-LAST:event_mVistaActionPerformed

    /* Atburðahandler fyrir það þegar smellt er á Upplýsingar - Um forrit í valslánni.
       Opnar glugga með mynd og upplýsingar um höfund.   
    */
    private void mUmForritActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mUmForritActionPerformed

        JOptionPane.showMessageDialog(null," Höfundur þessa forrits heitir Ólafur Ingi Guðmundsson.\n"
                + " Ólafur Ingi er nemi á fyrsta ári við Háskóla Íslands á\n"
                + " almennri tölvunarfræðibraut.\n"
                + "\n"
                + " Forritið er teikniforrit sem var unnið fyrir lokaverkefni\n"
                + " í námskeiðinu Viðmótsforritun við Háskóla Íslands.\n", 
                "Um forritið", JOptionPane.INFORMATION_MESSAGE,
                new javax.swing.ImageIcon(getClass().getResource("/teiknari/v2/vidmot/Myndir/EgGomulMynd.png")));

    }//GEN-LAST:event_mUmForritActionPerformed

    /* Atburðahandler sem sér til þess að ef notandi smellir á myndina(JLabel) sem sýnir
       stærstu stærðina á línu, þá stillist radio-takkinn fyrir það líka.    
    */
    private void myndStorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myndStorMousePressed

        if(radStor.isEnabled()){
            radStor.setSelected(true);
            size = 10;
        }
    }//GEN-LAST:event_myndStorMousePressed

    /* Atburðahandler sem sér til þess að ef notandi smellir á myndina(JLabel) sem sýnir
       miðlungs stærðina á línu, þá stillist radio-takkinn fyrir það líka.    
    */
    private void myndMidlungsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myndMidlungsMousePressed

        if(radMidlungs.isEnabled()){
            radMidlungs.setSelected(true);
            size = 5;
        }
    }//GEN-LAST:event_myndMidlungsMousePressed

    /* Atburðahandler sem sér til þess að ef notandi smellir á myndina(JLabel) sem sýnir
       litlu stærðina á línu, þá stillist radio-takkinn fyrir það líka.    
    */
    private void myndLitilMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myndLitilMousePressed

        if(radLitil.isEnabled()){
            radLitil.setSelected(true);
            size = 2;
        }
    }//GEN-LAST:event_myndLitilMousePressed

    /* Atburðahandler sem sér til þess að ef notandi smellir á myndina(JLabel) sem sýnir
       minnstu stærðina á línu, þá stillist radio-takkinn fyrir það líka.    
    */
    private void myndMjogLitilMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myndMjogLitilMousePressed

        if(radMjogLitil.isEnabled()){
            radMjogLitil.setSelected(true);
            size = 1;
        }
    }//GEN-LAST:event_myndMjogLitilMousePressed

    // Atburðahandler fyrir það þegar notandi smellir á Skrá - Opna mynd, í valslánni.
    // Kallar á loadPicture sem sér um það.
    private void mOpnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOpnaActionPerformed

        if(getCurrentPic()!=null){
            try {
                loadPicture();
            } catch (Exception ex) {
                Logger.getLogger(Gluggi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Fyrst þarf að opna blað til að setja myndina á.", "Athugasemd", 1);
        }
        
    }//GEN-LAST:event_mOpnaActionPerformed

    /* Atburðahandler fyrir það þegar notandi smellir á Upplýsingar - Aðstoð, í valslánni
       Opnar nýjan JFrame sem inniheldur leiðbeiningar fyrir notandann.    
    */
    private void mAdstodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAdstodActionPerformed

        Adstod adstodarGluggi = new Adstod();
        adstodarGluggi.setVisible(true);
        
    }//GEN-LAST:event_mAdstodActionPerformed

    private void tbThrihyrningurPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tbThrihyrningurPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_tbThrihyrningurPropertyChange

    /* Þetta fall upphafsstillir alla litapanelana sem eru á viðmótinu,þ.e. 
       gegnsæislitapanelinn, "Litur" panelinn, "Fylling" panelinn og nýlegu litina alla.
    */
    private void initColorPanels(){
        ((SyniBlad)panSynaLit).drawRect(true);
        ((SyniBlad)panSynaGegnsaei).drawRect(true);
        ((SyniBlad)panSynaGegnsaei).drawCircle();
        ((SyniBlad)panFylliLitur).drawRect(true);
               
        ((SyniBlad)panLitur1).drawRect(false);
        ((SyniBlad)panLitur2).drawRect(false);
        ((SyniBlad)panLitur3).drawRect(false);
        ((SyniBlad)panFylling1).drawRect(false);
        ((SyniBlad)panFylling2).drawRect(false);
        ((SyniBlad)panFylling3).drawRect(false);
        
        ((SyniBlad)panLitur1).setColor(Color.BLACK);
        ((SyniBlad)panFylliLitur).setColor(Color.LIGHT_GRAY);
        ((SyniBlad)panFylling1).setColor(Color.LIGHT_GRAY);       
    }
    
    /* Næstu 10 föll eru getterar og setterar fyrir tilviksbreyturnar
       sem blöðin, og atburðahandlerar í þessum klasa, notfæra sér.
    */
    public static void setFiller(Color c){
        filler = c;
    }
    
    public static Color getFiller(){
        return filler;
    }
    
    private void setSize(int size){
        this.size=size;
    }
    
    public static int getStrokeSize(){
        return size;
    }
    
    public static void setMainColor(Color c){
        mainColor = c;
    }
    
    public static Color getMainColor(){
        return mainColor;
    }
    
    public static float getTransValue(){
        return transVal;
    }
    
    public static int getSelectedTool(){
        return tool;
    }
    
    public static boolean getBucketMode(){
        return bucketPourAll;
    }
    
    public static boolean getFill(){
        return fill;
    }
    
    //Þetta fall finnur hvaða blað er opið á hverri stundu og skilar því, eða null
    // ef ekkert blað er opið.
    private Teikniblad getCurrentPic(){
        if(panMynd1.isShowing()){
            return (Teikniblad)panMynd1;
        }
        else if(panMynd2.isShowing()){
            return (Teikniblad)panMynd2;
        }
        else if(panMynd3.isShowing()){
            return (Teikniblad)panMynd3;
        }
        else if(panMynd4.isShowing()){
            return (Teikniblad)panMynd4;
        }
        else if(panMynd5.isShowing()){
            return (Teikniblad)panMynd5;
        }
        else return null;
    }
    
    // Þetta fall stillir nýlegu litina fyrir aðallitinn á viðmótinu.
    private void seRecentFillerColors(){
        ((SyniBlad)panFylling3).setColor(((SyniBlad)panFylling2).getColor());
        ((SyniBlad)panFylling2).setColor(((SyniBlad)panFylling1).getColor());
        ((SyniBlad)panFylling1).setColor(filler); 
    }
    
    // Þetta fall stillir nýlegu litina fyrir fyllingarlitinn á viðmótinu.
    private void setRecentColors(){
        ((SyniBlad)panLitur3).setColor(((SyniBlad)panLitur2).getColor());
        ((SyniBlad)panLitur2).setColor(((SyniBlad)panLitur1).getColor());
        ((SyniBlad)panLitur1).setColor(mainColor);
    }
    
    // Þetta fall setur name tilviksbreytuna á blöðunum sem vinnuheitið sem notandi
    // hefur valið sér, og setur einnig nafnið á tab-inn fyrir þá mynd í tabbedPane-inum.
    private void setPicName(String name){        
        if(name.length()<1){
            tpMyndir.setTitleAt(tpMyndir.getSelectedIndex(),"Mynd"+String.valueOf(tpMyndir.getSelectedIndex()+1));
            getCurrentPic().setPicName("Mynd"+String.valueOf(tpMyndir.getSelectedIndex()+1));
        }
        else{
            tpMyndir.setTitleAt(tpMyndir.getSelectedIndex(),name);
            getCurrentPic().setPicName(name);
        }
    }
    
    
    // Stillir tab tilvikbreytuna hjá blöðunum í samræmi við tab-inn sem þær hafa á viðmótinu í tabbed-pane.
    private void setTabs(){
        ((Teikniblad)panMynd1).setTab(0);
        ((Teikniblad)panMynd2).setTab(1);
        ((Teikniblad)panMynd3).setTab(2);
        ((Teikniblad)panMynd4).setTab(3);
        ((Teikniblad)panMynd5).setTab(4);
    }
    
    /* Þetta fall tekur "screenshot" af myndinni á blaðinu og setur í myndaskrá sem
       er af tagi BufferedImage.
    */
    public static BufferedImage takePicture(Component mynd){
        BufferedImage image = new BufferedImage(mynd.getWidth(),mynd.getHeight(),BufferedImage.TRANSLUCENT);
        
        mynd.paint(image.getGraphics());
        return image;
    }
    
    // Þetta fall tekur inn panel með mynd, sem vista á og nafn með absolute path.
    // Notfærir sér svo takePicture()til að fá myndina sem er þá vistuð skv. Absolute path nafninu.
    public void savePicture(Component mynd, String picName) throws Exception{
        BufferedImage img = takePicture(mynd);
        ImageIO.write(img,"png",new File(picName));
    }
    
    /* Notar JFileChooser til að velja mynd í tölvunni sem á að opna. Leyfir
       notanda að opna skrár af tagi jpeg og png og gengur úr skugga um að FileFilterinn sé
       stilltur í upphafi á að sýna bara slíkar skrár, ásamt möppum.
       Fallið notfærir sér isImageFile() fallið til að ganga úr skugga um að notandi geti ekki
       opnað mynd sem er ekki png eða jpeg. Ef svo er, þá kemur upp error-gluggi.
    */
    public void loadPicture() throws Exception{
        JFileChooser opnari = new JFileChooser();
            opnari.setDialogTitle("Opna mynd");
            FileFilter filter = new FileNameExtensionFilter("Myndaskrár (*.png;*.jpg;*jpeg)","png","jpg","jpeg");
            opnari.setFileFilter(filter);
            int result = opnari.showOpenDialog(this);
            
            if(result==JFileChooser.APPROVE_OPTION){
                if(isImageFile(String.valueOf(opnari.getSelectedFile()))){
                    BufferedImage image;
                    image = ImageIO.read(opnari.getSelectedFile());
                    if(image!=null){
                        getCurrentPic().addImage(image);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "Því miður fór eitthvað úrskeiðis."
                                + "Ekki er hægt að opna þessa mynd.");
                    }
                }
                else{
                    JOptionPane.showMessageDialog(this,"Einungis er hægt að opna myndir af tagi PNG og JPEG.");
                }
            }
    }
    
    // Gengur úr skugga um að strengurinn sem er tekinn inn passi við endingarnar fyrir png eða jpeg.
    private boolean isImageFile(String file){
        String extension = "";
        System.out.println(file);

        if(file.endsWith(".png") || file.endsWith(".jpg") || file.endsWith(".jpeg") || file.endsWith(".JPEG") || file.endsWith(".JPG")){
            return true;
        }
        else return false;
    }


    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gluggi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gluggi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gluggi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gluggi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gluggi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAfram;
    private javax.swing.JButton bFylliLitur;
    private javax.swing.JButton bHreinsa;
    private javax.swing.JButton bLitur;
    private javax.swing.JButton bLokaMynd;
    private javax.swing.JButton bNyMynd;
    private javax.swing.JButton bTilBaka;
    private javax.swing.ButtonGroup bgFata;
    private javax.swing.ButtonGroup bgStaerd;
    private javax.swing.ButtonGroup bgTol;
    private javax.swing.JCheckBox cbFylling;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JLabel labForm;
    private javax.swing.JLabel labGegnsaei;
    private javax.swing.JLabel labGegnsaeiProsent;
    private javax.swing.JLabel labLitur;
    private javax.swing.JLabel labStaerd;
    private javax.swing.JLabel labTol;
    private javax.swing.JMenuItem mAdstod;
    private javax.swing.JMenuItem mHaetta;
    private javax.swing.JMenuBar mMenuSla;
    private javax.swing.JMenuItem mOpna;
    private javax.swing.JMenu mSkra;
    private javax.swing.JMenuItem mUmForrit;
    private javax.swing.JMenu mUpplysingar;
    private javax.swing.JMenuItem mVinnuheiti;
    private javax.swing.JMenuItem mVista;
    private javax.swing.JLabel myndLitil;
    private javax.swing.JLabel myndMidlungs;
    private javax.swing.JLabel myndMjogLitil;
    private javax.swing.JLabel myndStor;
    private javax.swing.JPanel panBakgrunnur;
    private javax.swing.JPanel panForm;
    private javax.swing.JPanel panFylliLitur;
    private javax.swing.JPanel panFylling1;
    private javax.swing.JPanel panFylling2;
    private javax.swing.JPanel panFylling3;
    private javax.swing.JPanel panGegnsaei;
    private javax.swing.JPanel panLitil;
    private javax.swing.JPanel panLitur;
    private javax.swing.JPanel panLitur1;
    private javax.swing.JPanel panLitur2;
    private javax.swing.JPanel panLitur3;
    private javax.swing.JPanel panMidlungs;
    private javax.swing.JPanel panMjogLitil;
    private javax.swing.JPanel panMynd1;
    private javax.swing.JPanel panMynd2;
    private javax.swing.JPanel panMynd3;
    private javax.swing.JPanel panMynd4;
    private javax.swing.JPanel panMynd5;
    private javax.swing.JPanel panMyndStyringar;
    private javax.swing.JPanel panRecentFylling;
    private javax.swing.JPanel panRecentLitir;
    private javax.swing.JPanel panStaerd;
    private javax.swing.JPanel panStor;
    private javax.swing.JPanel panStyringar;
    private javax.swing.JPanel panSynaGegnsaei;
    private javax.swing.JPanel panSynaLit;
    private javax.swing.JPanel panTol;
    private javax.swing.JRadioButton radHellaBakgrunn;
    private javax.swing.JRadioButton radHellaMynd;
    private javax.swing.JRadioButton radLitil;
    private javax.swing.JRadioButton radMidlungs;
    private javax.swing.JRadioButton radMjogLitil;
    private javax.swing.JRadioButton radStor;
    private javax.swing.JSlider slGegnsaei;
    private javax.swing.JToggleButton tb3DKassi;
    private javax.swing.JToggleButton tbBrusi;
    private javax.swing.JToggleButton tbFata;
    private javax.swing.JToggleButton tbHringur;
    private javax.swing.JToggleButton tbKassi;
    private javax.swing.JToggleButton tbLina;
    private javax.swing.JToggleButton tbMjukurKassi;
    private javax.swing.JToggleButton tbPensill;
    private javax.swing.JToggleButton tbStrengur;
    private javax.swing.JToggleButton tbStroka;
    private javax.swing.JToggleButton tbThrihyrningur;
    private javax.swing.JTabbedPane tpMyndir;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables


}
